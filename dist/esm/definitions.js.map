{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC;AA2BxC,MAAM,CAAN,IAAY,QAGX;AAHD,WAAY,QAAQ;IAChB,2BAAe,CAAA;IACf,yBAAa,CAAA;AACjB,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\n\nimport { PluginListenerHandle } from \"@capacitor/core\";\n\ndeclare module '@capacitor/cli' {\n    interface PluginsConfig {\n        /**\n         * On Android, the keyboard can be configured with the following options:\n         */\n        Fullscreen?: {\n            keyboardResizeNative?: boolean;\n        };\n    }\n}\nexport interface FullscreenPlugin {\n\n    setNavigationBarContrastColor(value: {contrast: Contrast}): Promise<void>;\n    setStatusBarContrastColor(value: {contrast: Contrast}): Promise<void>;\n    getSafeAreaInsets(): Promise<SafeAreaInsets>;\n    getSafeAreaInsets(): Promise<SafeAreaInsets>;\n    addListener(\n        eventName: 'insetsChanged',\n        listenerFunc: (insets: SafeAreaInsets) => void,\n    ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n}\n\nexport enum Contrast {\n    light = 'light',\n    dark = 'dark',\n}\nexport interface SafeAreaInsets {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n}"]}